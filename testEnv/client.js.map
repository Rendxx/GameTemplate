{"version":3,"sources":["Data.js","WebSocket.js","Message.js","Client.Main.js","Client.Renderer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChjfile":"client.js","sourcesContent":["Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n/*\r\n * Host Main\r\n */\r\n\r\n(function (Game) {\r\n    // ROOM STATUS \r\n    DATA= {\r\n        ROOMSTATUS: {\r\n            'READY': 1,\r\n            'PLAYING': 2,\r\n            'END': 3,\r\n            1: 'READY',\r\n            2: 'PLAYING',\r\n            3: 'END'\r\n        }\r\n    };\r\n    Game.DATA = DATA;\r\n})(Rendxx.Game);","var Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n// Websocket Handler\r\n(function (Game) {\r\n    var TYPE = {\r\n        SERVER: 1,\r\n        HOST: 2,\r\n        CLIENT: 3,\r\n        OBSERVER: 4\r\n    };\r\n    var MyWebSocket = function (opts_in) {\r\n        'use strict';\r\n        var that = this;\r\n        var ws = null;\r\n        var wsConnStr;\r\n        \r\n        this.onopen = null;\r\n        this.onmessage = null;\r\n        this.onerror = null;\r\n        this.onclose = null;\r\n\r\n        this.start = function () {\r\n            if (ws != null) ws.close();\r\n            ws = new WebSocket(wsConnStr);\r\n            ws.onopen = function (evt) {\r\n                if (that.onopen != null) that.onopen(evt);\r\n            };\r\n            ws.onmessage = function (evt) {\r\n                if (that.onmessage != null) that.onmessage(evt);\r\n            };\r\n            ws.onerror = function (evt) {\r\n                if (that.onerror != null) that.onerror(evt);\r\n            };\r\n            ws.onclose = function (evt) {\r\n                if (that.onclose != null) that.onclose(evt);\r\n            };\r\n        };\r\n        this.stop = function () {\r\n            if (ws == null) return;\r\n            ws.close();\r\n        };\r\n        this.send = function (msg) {\r\n            if (ws == null) throw new Error('Connection is not available');\r\n            ws.send(msg);\r\n        }\r\n\r\n        var _init = function (opts) {\r\n            window.onbeforeunload = function () {\r\n                if (ws != null) ws.close();\r\n            };\r\n            if (opts == null || opts.type == null || opts.id == null) throw new Error('WebSocket Parameter Missing');\r\n\r\n            var hostName = opts.host || window.location.hostname;\r\n            wsConnStr = \"ws://\" + hostName + \"/api/Conn/\" + opts.type + '?id=' + opts.id;\r\n        }(opts_in);\r\n    };\r\n    Game.WebSocket = MyWebSocket;\r\n    Game.WebSocket.TYPE = TYPE;\r\n})(Rendxx.Game);\r\n","Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n(function (Game) {\r\n    var TYPE = {\r\n        'SERVER': 1,\r\n        'HOST': 2,\r\n        'CLIENT': 3,\r\n        1: 'SERVER',\r\n        2: 'HOST',\r\n        3: 'CLIENT'\r\n    };\r\n\r\n    var TARGET = {\r\n        'SERVER': 'SERVER',\r\n        'HOST': 'HOST'\r\n    };\r\n\r\n    var CODE = {\r\n        SERVER:{\r\n            'NO_CODE': 0,\r\n            'HOST_RESET_REQUEST' : 1,\r\n            'HOST_RESET' : 2,\r\n            'CLIENT_RESET_REQUEST' : 3,\r\n            'CLIENT_RESET' : 4,\r\n            'OB_RESET_REQUEST' : 5,\r\n            'OB_RESET' : 6,\r\n            'HOST_SETUPED' : 7,\r\n            'HOST_UPDATE_CLIENTLIST' : 8,\r\n            'HOST_UPDATE_OBLIST' : 9,\r\n            'CACHE_GAME_SETUP' : 10,\r\n            'CACHE_GAME' : 11,\r\n            'GAME_START' : 12,\r\n            'GAME_END' : 13,\r\n            'GAME_RENEW': 14,\r\n            'GAME_PAUSE': 15,\r\n            'GAME_CONTINUE': 16,\r\n            'GAME_SETUP': 17,\r\n            'GAME_UPDATE': 18,\r\n            'CACHE_OB': 18\r\n        },\r\n        HOST: {\r\n            'NO_CODE': 0,\r\n            'CLIENT_SETUP': 1,\r\n            'CLIENT_UPDATE': 2,\r\n            'ACTION': 3\r\n        },\r\n        CUSTOMIZED: 'CUSTOMIZED'\r\n    };\r\n\r\n    var timeStamp = function () {\r\n        return Date.now() + \"\";\r\n    };\r\n\r\n    var messageDecode = function (msgStr) {\r\n        var msg = {};\r\n        try {\r\n            var tmp = msgStr.split('|');\r\n            msg['type'] = TYPE[Number(tmp[0])];\r\n            msg['timestamp'] = tmp[1];\r\n            msg['source'] = tmp[2];\r\n            msg['code'] = Number(tmp[3]);\r\n            msg['content'] = $.parseJSON(tmp[4]);\r\n            return msg;\r\n        } catch (e) {\r\n            throw new Error(\"Illegal command\");\r\n        }\r\n    };\r\n\r\n    var messageEncode = function (msg) {\r\n        if (msg == null || msg.type == null || msg.code == null) return;\r\n        var d1 = Game.Message.DELIMITER.PART,\r\n            d2 = Game.Message.DELIMITER.TARGET;\r\n        return msg['type'] + d1\r\n            + ('timestamp' in msg ? msg['timestamp'] : timeStamp()) + d1\r\n            + (('target' in msg && msg['target'].length > 0) ? msg['target'].join(d2) : '') + d1\r\n            + msg['code'] + d1\r\n            + ('content' in msg ? msg['content'] : '');\r\n    };\r\n\r\n    // create JS hack\r\n    if (!Date.now) {\r\n        Date.now = function () { return new Date().getTime(); }\r\n    }\r\n\r\n    Game.Message = {\r\n        TYPE: TYPE,\r\n        TARGET: TARGET,\r\n        CODE: CODE,\r\n        DELIMITER: {\r\n            PART: '|',\r\n            TARGET: ','\r\n        },\r\n        Decode: messageDecode,\r\n        Encode: messageEncode\r\n    };\r\n})(Rendxx.Game);","Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n/*\r\n * Client Main\r\n */\r\n\r\n(function (Game) {\r\n    var STATUS = Game.DATA.ROOMSTATUS;\r\n    var Main = function (components_in) {\r\n        // Data ------------------------------------------------------\r\n        var that = this,\r\n            Message = Game.Message;\r\n\r\n        var component = {\r\n            renderer: null,\r\n            websocket: null\r\n        };\r\n\r\n        var controller = {};\r\n\r\n        var _status = STATUS.READY,\r\n            _setuped = false,           // true if host is ready to use\r\n            _msgReceive = {};        // message handleing functions on received message\r\n        \r\n        // Public function --------------------------------------------\r\n        // setup and start working\r\n        this.setup = function () {\r\n            _setupConn();\r\n        };\r\n\r\n        // Private function -------------------------------------------\r\n        // reset game data\r\n        var _reset = function (dat) {\r\n            var status = STATUS.READY;\r\n            var setupData = null;\r\n            var clientData = null;\r\n            if (dat != null) {\r\n                status = dat.status;\r\n                setupData = dat.setup;\r\n                clientData = dat.client;\r\n            }\r\n\r\n            component.renderer.reset(setupData);\r\n            component.renderer.updateGame(clientData);\r\n            if (status == STATUS.READY) _renew();\r\n            else if (status == STATUS.PLAYING) _start();\r\n            else _end();\r\n        };\r\n\r\n        // game ------------------------------------------------\r\n        var _renew = function () {\r\n            _status = STATUS.READY;\r\n            component.renderer.renew();\r\n        };\r\n\r\n        var _start = function () {\r\n            component.websocket.send(Message.Encode({\r\n                type: Message.TYPE.SERVER,\r\n                code: Message.CODE.SERVER.OB_RESET_REQUEST\r\n            }));\r\n            _status = STATUS.PLAYING;\r\n            component.renderer.start();\r\n        };\r\n\r\n        var _end = function () {\r\n            _status = STATUS.END;\r\n            component.renderer.end();\r\n        };\r\n\r\n        var _pause = function () {\r\n            component.renderer.pause();\r\n        };\r\n\r\n        var _continue = function () {\r\n            component.renderer.continue();\r\n        };\r\n\r\n        // Setup ------------------------------------------------------\r\n        var _setupComponent = function (components_in) {\r\n            try {\r\n                component.renderer = components_in.renderer;\r\n                component.websocket = new Game.WebSocket({\r\n                    type: Game.WebSocket.TYPE.CLIENT,\r\n                    id: window.parent.CLIENTID,\r\n                    host: null\r\n                });\r\n\r\n                component.renderer.message.send = function (code, content) {\r\n                    component.websocket.send(Message.Encode({\r\n                        type: Message.TYPE.HOST,\r\n                        target: [Message.TARGET.HOST],\r\n                        code: code,\r\n                        content: JSON.stringify(content)\r\n                    }));\r\n                };\r\n                component.renderer.message.action = function (content) {\r\n                    component.websocket.send(Message.Encode({\r\n                        type: Message.TYPE.HOST,\r\n                        target: [Message.TARGET.HOST],\r\n                        code: Message.CODE.HOST.ACTION,\r\n                        content: JSON.stringify(content)\r\n                    }));\r\n                };\r\n            } catch (e) {\r\n                throw new Error('Unexpected Error in setuping components: '+e.message);\r\n            }\r\n        };\r\n\r\n        var _setupMessageHandler = function () {\r\n            _msgReceive = {\r\n                SERVER: {},\r\n                HOST: {},\r\n                CLIENT: {}\r\n            };\r\n\r\n            // SERVER\r\n            _msgReceive.SERVER[Message.CODE.SERVER.CLIENT_RESET] = function (dat) { _reset(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_START] = function (dat) { _start(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_UPDATE] = function (dat) { component.renderer.updateGame(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_END] = function (dat) { _end(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_RENEW] = function (dat) { _renew(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_PAUSE] = function (dat) { _pause(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_CONTINUE] = function (dat) { _continue(dat); };\r\n            // HOST\r\n            _msgReceive.HOST[Message.CODE.HOST.CLIENT_SETUP] = function (dat) { component.renderer.reset(dat); };\r\n            _msgReceive.HOST[Message.CODE.HOST.CLIENT_UPDATE] = function (dat) { component.renderer.updateGame(dat); };\r\n            _msgReceive.HOST[Message.CODE.CUSTOMIZED] = function (msg) { component.renderer.receive(msg); };\r\n        };\r\n\r\n        var _setupConn = function () {\r\n            component.websocket.onopen = function () {\r\n                console.log('[ OPEN ]');\r\n                component.websocket.send(Message.Encode({\r\n                    type: Message.TYPE.SERVER,\r\n                    code: Message.CODE.SERVER.NO_CODE,\r\n                    content: null\r\n                }));\r\n            };\r\n            component.websocket.onmessage = function (evt) {\r\n                //console.log(evt.data);\r\n                var msg = Message.Decode(evt.data);\r\n                if (_msgReceive[msg.type].hasOwnProperty(msg.code)) _msgReceive[msg.type][msg.code](msg.content);\r\n                else if (msg.type == Message.TYPE.HOST) _msgReceive[msg.type][Message.CODE.CUSTOMIZED](msg);\r\n            };\r\n            component.websocket.onerror = function () {\r\n                console.log('[ ERROR ]');\r\n            };\r\n            component.websocket.onclose = function () {\r\n                console.log('[ CLOSE ]');\r\n            };\r\n            component.websocket.start();\r\n        };\r\n\r\n        var _init = function (components_in) {\r\n            _setupComponent(components_in);\r\n            _setupMessageHandler();\r\n        }(components_in);\r\n    };\r\n    Game.Client = Game.Client || {};\r\n    Game.Client.Main = Main;\r\n})(Rendxx.Game);","Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n/*\r\n * Client Renderer\r\n */\r\n\r\n(function (Game) {\r\n    var Renderer = function (components_in) {\r\n        // Data ------------------------------------------------------\r\n        var that = this,\r\n            current = null,             // component currently use\r\n            _cache_game = null,         // cache for latest game data\r\n            playing = false;\r\n\r\n        var component = {\r\n            prepare: null,\r\n            main: null,\r\n            end: null\r\n        };\r\n\r\n        // Callback -----------------------------------------------------------\r\n        this.onSetuped = null;\r\n        this.message = {};\r\n\r\n        // public function ----------------------------------------------------\r\n        this.reset = function (setupData) {\r\n            if (setupData) component.main.reset(setupData);\r\n        };\r\n\r\n        this.getSetupPara = function () {\r\n            return component.prepare.getSetupPara();\r\n        };\r\n\r\n        // Status Change ------------------------------------------------------\r\n        this.renew = function () {\r\n            playing = false;\r\n            _cache_game = null;\r\n            current = component.prepare;\r\n            current.updateGame(_cache_game);\r\n\r\n            component.prepare.show();\r\n            component.main.hide();\r\n            component.end.hide();\r\n        };\r\n\r\n        this.start = function () {\r\n            playing= true;\r\n            current = component.main;\r\n            current.updateGame(_cache_game);\r\n\r\n            component.prepare.hide();\r\n            component.main.show();\r\n            component.end.hide();\r\n        };\r\n\r\n        this.end = function () {\r\n            playing= false;\r\n            current = component.end;\r\n            current.updateGame(_cache_game);\r\n\r\n            component.prepare.hide();\r\n            component.main.hide();\r\n            component.end.show();\r\n        };\r\n\r\n        this.pause = function () {\r\n            if (!playing) return;\r\n            current.pause();\r\n        };\r\n\r\n        this.continue = function () {\r\n            if (!playing) return;\r\n            current.continue();\r\n        };\r\n\r\n        // Update -----------------------------------------------------\r\n        this.updateGame = function (data) {\r\n            _cache_game = data;\r\n            current.updateGame(data);\r\n        };\r\n\r\n        // Setup ------------------------------------------------------\r\n        var _setupComponent = function (components_in) {\r\n            try {\r\n                component.prepare = components_in.prepare;\r\n                component.main = components_in.main;\r\n                component.end = components_in.end;\r\n                current = component.prepare;\r\n\r\n                component.main.onSetuped = function () {\r\n                    if (that.onSetuped) that.onSetuped();\r\n                };\r\n                component.main.message = that.message;\r\n\r\n            } catch (e) {\r\n                throw new Error('Unexpected Error in setuping components: '+e.message);\r\n            }\r\n        };\r\n                \r\n        var _init = function (components_in) {\r\n            _setupComponent(components_in);\r\n        }(components_in);\r\n    };\r\n    Game.Client = Game.Client || {};\r\n    Game.Client.Renderer = Renderer;\r\n})(Rendxx.Game);"],"sourceRoot":"/source/"}