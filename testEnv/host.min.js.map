{"version":3,"sources":["Data.js","WebSocket.js","Message.js","Host.Main.js","Host.Renderer.js"],"names":["Rendxx","Game","DATA","ROOMSTATUS","READY","PLAYING","END","1","2","3","TYPE","SERVER","HOST","CLIENT","OBSERVER","MyWebSocket","opts_in","wsConnStr","that","this","ws","onopen","onmessage","onerror","onclose","start","close","WebSocket","evt","stop","send","msg","Error","opts","window","onbeforeunload","type","id","hostName","host","location","hostname","TARGET","CODE","NO_CODE","HOST_RESET_REQUEST","HOST_RESET","CLIENT_RESET_REQUEST","CLIENT_RESET","OB_RESET_REQUEST","OB_RESET","HOST_SETUPED","HOST_UPDATE_CLIENTLIST","HOST_UPDATE_OBLIST","CACHE_GAME_SETUP","CACHE_GAME","GAME_START","GAME_END","GAME_RENEW","GAME_PAUSE","GAME_CONTINUE","GAME_SETUP","GAME_UPDATE","CACHE_OB","CLIENT_SETUP","CLIENT_UPDATE","ACTION","CUSTOMIZED","timeStamp","Date","now","messageDecode","msgStr","tmp","split","Number","$","parseJSON","e","messageEncode","code","d1","Message","DELIMITER","PART","d2","length","join","getTime","Decode","Encode","STATUS","Main","components_in","component","clientList","game","websocket","renderer","_status","_setuped","_msgReceive","_msgSend_server","onStart","onEnd","onRenew","onPause","onContinue","setup","_setupConn","_reset","dat","status","setupData","gameData","clients","obs","reset","updateGame","_renew","_start","_end","unlock","renew","lock","end","_pause","pause","_continue","_setupComponent","parent","HOSTID","onUpdated","clientSetup","targets","clientData","target","content","JSON","stringify","clientUpdate","onSetuped","onUpdateClient","updateClientList","onUpdateOb","obData","updateObList","message","_setupMessageHandler","getClientList","getSetupPara","source","action","receive","console","log","data","hasOwnProperty","Host","Renderer","current","_cache_client","_cache_ob","_cache_game","playing","prepare","main","show","hide"],"mappings":"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","file":"host.min.js","sourcesContent":["Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n/*\r\n * Host Main\r\n */\r\n\r\n(function (Game) {\r\n    // ROOM STATUS \r\n    DATA= {\r\n        ROOMSTATUS: {\r\n            'READY': 1,\r\n            'PLAYING': 2,\r\n            'END': 3,\r\n            1: 'READY',\r\n            2: 'PLAYING',\r\n            3: 'END'\r\n        }\r\n    };\r\n    Game.DATA = DATA;\r\n})(Rendxx.Game);","var Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n// Websocket Handler\r\n(function (Game) {\r\n    var TYPE = {\r\n        SERVER: 1,\r\n        HOST: 2,\r\n        CLIENT: 3,\r\n        OBSERVER: 4\r\n    };\r\n    var MyWebSocket = function (opts_in) {\r\n        'use strict';\r\n        var that = this;\r\n        var ws = null;\r\n        var wsConnStr;\r\n        \r\n        this.onopen = null;\r\n        this.onmessage = null;\r\n        this.onerror = null;\r\n        this.onclose = null;\r\n\r\n        this.start = function () {\r\n            if (ws != null) ws.close();\r\n            ws = new WebSocket(wsConnStr);\r\n            ws.onopen = function (evt) {\r\n                if (that.onopen != null) that.onopen(evt);\r\n            };\r\n            ws.onmessage = function (evt) {\r\n                if (that.onmessage != null) that.onmessage(evt);\r\n            };\r\n            ws.onerror = function (evt) {\r\n                if (that.onerror != null) that.onerror(evt);\r\n            };\r\n            ws.onclose = function (evt) {\r\n                if (that.onclose != null) that.onclose(evt);\r\n            };\r\n        };\r\n        this.stop = function () {\r\n            if (ws == null) return;\r\n            ws.close();\r\n        };\r\n        this.send = function (msg) {\r\n            if (ws == null) throw new Error('Connection is not available');\r\n            ws.send(msg);\r\n        }\r\n\r\n        var _init = function (opts) {\r\n            window.onbeforeunload = function () {\r\n                if (ws != null) ws.close();\r\n            };\r\n            if (opts == null || opts.type == null || opts.id == null) throw new Error('WebSocket Parameter Missing');\r\n\r\n            var hostName = opts.host || window.location.hostname;\r\n            wsConnStr = \"ws://\" + hostName + \"/api/Conn/\" + opts.type + '?id=' + opts.id;\r\n        }(opts_in);\r\n    };\r\n    Game.WebSocket = MyWebSocket;\r\n    Game.WebSocket.TYPE = TYPE;\r\n})(Rendxx.Game);\r\n","Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n(function (Game) {\r\n    var TYPE = {\r\n        'SERVER': 1,\r\n        'HOST': 2,\r\n        'CLIENT': 3,\r\n        1: 'SERVER',\r\n        2: 'HOST',\r\n        3: 'CLIENT'\r\n    };\r\n\r\n    var TARGET = {\r\n        'SERVER': 'SERVER',\r\n        'HOST': 'HOST'\r\n    };\r\n\r\n    var CODE = {\r\n        SERVER:{\r\n            'NO_CODE': 0,\r\n            'HOST_RESET_REQUEST' : 1,\r\n            'HOST_RESET' : 2,\r\n            'CLIENT_RESET_REQUEST' : 3,\r\n            'CLIENT_RESET' : 4,\r\n            'OB_RESET_REQUEST' : 5,\r\n            'OB_RESET' : 6,\r\n            'HOST_SETUPED' : 7,\r\n            'HOST_UPDATE_CLIENTLIST' : 8,\r\n            'HOST_UPDATE_OBLIST' : 9,\r\n            'CACHE_GAME_SETUP' : 10,\r\n            'CACHE_GAME' : 11,\r\n            'GAME_START' : 12,\r\n            'GAME_END' : 13,\r\n            'GAME_RENEW': 14,\r\n            'GAME_PAUSE': 15,\r\n            'GAME_CONTINUE': 16,\r\n            'GAME_SETUP': 17,\r\n            'GAME_UPDATE': 18,\r\n            'CACHE_OB': 18\r\n        },\r\n        HOST: {\r\n            'NO_CODE': 0,\r\n            'CLIENT_SETUP': 1,\r\n            'CLIENT_UPDATE': 2,\r\n            'ACTION': 3\r\n        },\r\n        CUSTOMIZED: 'CUSTOMIZED'\r\n    };\r\n\r\n    var timeStamp = function () {\r\n        return Date.now() + \"\";\r\n    };\r\n\r\n    var messageDecode = function (msgStr) {\r\n        var msg = {};\r\n        try {\r\n            var tmp = msgStr.split('|');\r\n            msg['type'] = TYPE[Number(tmp[0])];\r\n            msg['timestamp'] = tmp[1];\r\n            msg['source'] = tmp[2];\r\n            msg['code'] = Number(tmp[3]);\r\n            msg['content'] = $.parseJSON(tmp[4]);\r\n            return msg;\r\n        } catch (e) {\r\n            throw new Error(\"Illegal command\");\r\n        }\r\n    };\r\n\r\n    var messageEncode = function (msg) {\r\n        if (msg == null || msg.type == null || msg.code == null) return;\r\n        var d1 = Game.Message.DELIMITER.PART,\r\n            d2 = Game.Message.DELIMITER.TARGET;\r\n        return msg['type'] + d1\r\n            + ('timestamp' in msg ? msg['timestamp'] : timeStamp()) + d1\r\n            + (('target' in msg && msg['target'].length > 0) ? msg['target'].join(d2) : '') + d1\r\n            + msg['code'] + d1\r\n            + ('content' in msg ? msg['content'] : '');\r\n    };\r\n\r\n    // create JS hack\r\n    if (!Date.now) {\r\n        Date.now = function () { return new Date().getTime(); }\r\n    }\r\n\r\n    Game.Message = {\r\n        TYPE: TYPE,\r\n        TARGET: TARGET,\r\n        CODE: CODE,\r\n        DELIMITER: {\r\n            PART: '|',\r\n            TARGET: ','\r\n        },\r\n        Decode: messageDecode,\r\n        Encode: messageEncode\r\n    };\r\n})(Rendxx.Game);","Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n/*\r\n * Host Main\r\n */\r\n\r\n(function (Game) {\r\n    // ROOM STATUS \r\n    var STATUS = Game.DATA.ROOMSTATUS;\r\n\r\n    var Main = function (components_in) {\r\n        // Data ------------------------------------------------------\r\n        var that = this,\r\n            Message = Game.Message;\r\n\r\n        var component = {\r\n            clientList: null,\r\n            game: null,\r\n            websocket: null,\r\n            renderer: null\r\n        };\r\n        var _status = STATUS.READY,\r\n            _setuped = false,           // true if host is ready to use\r\n            _msgReceive = {},        // message handleing functions on received message\r\n            _msgSend_server = null,        // message sending functions\r\n            _msgHandler_server = {};        // server message handler\r\n\r\n        // Callback ---------------------------------------------------\r\n        this.onStart = null;\r\n        this.onEnd = null;\r\n        this.onRenew = null;\r\n        this.onPause = null;\r\n        this.onContinue = null;\r\n\r\n        // Public function --------------------------------------------\r\n        // setup and start working\r\n        this.setup = function () {\r\n            _setupConn();\r\n        };\r\n\r\n        // Private function -------------------------------------------\r\n        // reset game data\r\n        var _reset = function (dat) {\r\n            var status = STATUS.READY;\r\n            var setupData = null;\r\n            var gameData = null;\r\n            var clients = null;\r\n            var obs = null;\r\n            if (dat != null) {\r\n                status = dat.status;\r\n                setupData = dat.setup;\r\n                gameData = dat.game;\r\n                clients = dat.clients;\r\n                obs = dat.obs;\r\n            }\r\n\r\n            component.clientList.reset(clients, obs);\r\n            component.game.reset(setupData, gameData);\r\n            component.renderer.reset(setupData);\r\n            component.renderer.updateGame(gameData);\r\n            if (status == STATUS.READY) _renew();\r\n            else if (status == STATUS.PLAYING) _start();\r\n            else _end();\r\n            _msgSend_server(Message.CODE.SERVER.HOST_SETUPED);\r\n        };\r\n\r\n        // Game ------------------------------------------------------\r\n        var _renew = function () {\r\n            _status = STATUS.READY;\r\n            component.clientList.unlock();\r\n            component.game.renew();\r\n            component.renderer.renew();\r\n            if (that.onRenew) that.onRenew();\r\n        };\r\n\r\n        var _start = function () {\r\n            _status = STATUS.PLAYING;\r\n            component.clientList.lock();\r\n            component.game.start();\r\n            component.renderer.start();\r\n            if (that.onStart) that.onStart();\r\n        };\r\n\r\n        var _end = function () {\r\n            _status = STATUS.END;\r\n            component.clientList.unlock();\r\n            component.game.end();\r\n            component.renderer.end();\r\n            if (that.onEnd) that.onEnd();\r\n        };\r\n\r\n        var _pause = function () {\r\n            component.game.pause();\r\n            component.renderer.pause();\r\n            if (that.onPause) that.onPause();\r\n        };\r\n\r\n        var _continue = function () {\r\n            component.game.continue();\r\n            component.renderer.continue();\r\n            if (that.onContinue) that.onContinue();\r\n        };\r\n\r\n        // Setup ------------------------------------------------------\r\n        // setup game components and connect them\r\n        var _setupComponent = function (components_in) {\r\n            try {\r\n                component.clientList = components_in.clientList;\r\n                component.game = components_in.game;\r\n                component.renderer = components_in.renderer;\r\n                component.websocket = new Game.WebSocket({\r\n                    type: Game.WebSocket.TYPE.HOST,\r\n                    id: window.parent.HOSTID,\r\n                    host: null\r\n                });\r\n\r\n                // game\r\n                component.game.onUpdated = function (gameData) {\r\n                    component.renderer.updateGame(gameData);\r\n                    _msgSend_server(Message.CODE.SERVER.CACHE_GAME, gameData);\r\n                };\r\n\r\n                component.game.clientSetup = function (targets, clientData) {\r\n                    component.websocket.send(Message.Encode({\r\n                        type: Message.TYPE.HOST,\r\n                        target: targets,\r\n                        code: Message.CODE.HOST.CLIENT_SETUP,\r\n                        content: JSON.stringify(clientData)\r\n                    }));\r\n                };\r\n                component.game.clientUpdate = function (targets, clientData) {\r\n                    component.websocket.send(Message.Encode({\r\n                        type: Message.TYPE.HOST,\r\n                        target: targets,\r\n                        code: Message.CODE.HOST.CLIENT_UPDATE,\r\n                        content: JSON.stringify(clientData)\r\n                    }));\r\n                };\r\n                component.game.send = function (targets, code, content) {\r\n                    component.websocket.send(Message.Encode({\r\n                        type: Message.TYPE.HOST,\r\n                        target: targets,\r\n                        code: code,\r\n                        content: JSON.stringify(content)\r\n                    }));\r\n                };\r\n                component.game.onSetuped = function (setupData) {\r\n                    component.renderer.reset(setupData);\r\n                    _msgSend_server(Message.CODE.SERVER.CACHE_GAME_SETUP, setupData);\r\n                };\r\n\r\n                component.clientList.onUpdateClient = function (clientData) {\r\n                    component.renderer.updateClientList(clientData);\r\n                };\r\n\r\n                component.clientList.onUpdateOb = function (obData) {\r\n                    component.renderer.updateObList(obData);\r\n                };\r\n\r\n                // renderer\r\n                component.renderer.onSetuped = function () {\r\n                    _setuped = true;\r\n                };\r\n            } catch (e) {\r\n                throw new Error('Unexpected Error in setuping components: ' + e.message);\r\n            }\r\n        };\r\n\r\n        var _setupMessageHandler = function () {\r\n            _msgSend_server = function (code, content) {\r\n                component.websocket.send(Message.Encode({\r\n                    type: Message.TYPE.SERVER,\r\n                    code: code,\r\n                    content: content == null ? null : JSON.stringify(content)\r\n                }));\r\n            };\r\n\r\n            _msgReceive = {\r\n                SERVER: {},\r\n                HOST: {}\r\n            };\r\n\r\n            // SERVER\r\n            _msgReceive.SERVER[Message.CODE.SERVER.HOST_RESET] = function (dat) { _reset(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.HOST_UPDATE_CLIENTLIST] = function (dat) { component.clientList.updateClientList(dat.clients); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.HOST_UPDATE_OBLIST] = function (dat) { component.clientList.updateObList(dat.obs); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_START] = function (dat) {\r\n                component.game.setup(\r\n                    component.clientList.getClientList(),\r\n                    component.renderer.getSetupPara()\r\n                );\r\n                _start(dat);\r\n            };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_END] = function (dat) { _end(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_RENEW] = function (dat) { _renew(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_PAUSE] = function (dat) { _pause(dat); };\r\n            _msgReceive.SERVER[Message.CODE.SERVER.GAME_CONTINUE] = function (dat) { _continue(dat); };\r\n            // HOST\r\n            _msgReceive.HOST[Message.CODE.HOST.ACTION] = function (dat, source) { component.game.action(source, dat); };\r\n            _msgReceive.HOST[Message.CODE.CUSTOMIZED] = function (msg) { component.game.receive(msg); };\r\n        };\r\n\r\n        var _setupConn = function () {\r\n            component.websocket.onopen = function () {\r\n                console.log('[ OPEN ]');\r\n            };\r\n            component.websocket.onmessage = function (evt) {\r\n                //console.log(evt.data);\r\n                var msg = Message.Decode(evt.data);\r\n                if (_msgReceive[msg.type].hasOwnProperty(msg.code)) _msgReceive[msg.type][msg.code](msg.content, msg.source);\r\n                else if (msg.type == Message.TYPE.HOST) _msgReceive[msg.type][Message.CODE.CUSTOMIZED](msg);\r\n            };\r\n            component.websocket.onerror = function () {\r\n                console.log('[ ERROR ]');\r\n            };\r\n            component.websocket.onclose = function () {\r\n                console.log('[ CLOSE ]');\r\n            };\r\n            component.websocket.start();\r\n        };\r\n\r\n        var _init = function (components_in) {\r\n            _setupComponent(components_in);\r\n            _setupMessageHandler();\r\n        }(components_in);\r\n    };\r\n    Game.Host = Game.Host || {};\r\n    Game.Host.Main = Main;\r\n})(Rendxx.Game);","Rendxx = Rendxx || {};\r\nRendxx.Game = Rendxx.Game || {};\r\n\r\n/*\r\n * Host Controller\r\n */\r\n\r\n(function (Game) {\r\n    var Renderer = function (components_in) {\r\n        // Data ------------------------------------------------------\r\n        var that = this,\r\n            current = null,             // component currently use\r\n            _cache_client = null,       // cache for latest client list data\r\n            _cache_ob = null,           // cache for latest ob list data\r\n            _cache_game = null,         // cache for latest game data\r\n            playing = false;\r\n\r\n        var component = {\r\n            prepare: null,\r\n            main: null,\r\n            end: null\r\n        };\r\n\r\n        // Callback -----------------------------------------------------------\r\n        this.onSetuped = null;\r\n\r\n        // public function ----------------------------------------------------\r\n        this.reset = function (setupData, gameData) {\r\n            component.main.reset(setupData);\r\n            this.updateGame(gameData);\r\n        };\r\n\r\n        this.getSetupPara = function () {\r\n            return component.prepare.getSetupPara();\r\n        };\r\n\r\n        // Status Change ------------------------------------------------------\r\n        this.renew = function () {\r\n            playing = false;\r\n            _cache_game = null;\r\n            current = component.prepare;\r\n            current.updateClientList(_cache_client);\r\n            current.updateObList(_cache_ob);\r\n            current.updateGame(_cache_game);\r\n\r\n            component.prepare.show();\r\n            component.main.hide();\r\n            component.end.hide();\r\n        };\r\n\r\n        this.start = function () {\r\n            playing= true;\r\n            current = component.main;\r\n            current.updateClientList(_cache_client);\r\n            current.updateObList(_cache_ob);\r\n            current.updateGame(_cache_game);\r\n\r\n            component.prepare.hide();\r\n            component.main.show();\r\n            component.end.hide();\r\n        };\r\n\r\n        this.end = function () {\r\n            playing= false;\r\n            current = component.end;\r\n            current.updateClientList(_cache_client);\r\n            current.updateObList(_cache_ob);\r\n            current.updateGame(_cache_game);\r\n\r\n            component.prepare.hide();\r\n            component.main.hide();\r\n            component.end.show();\r\n        };\r\n\r\n        this.pause = function () {\r\n            if (!playing) return;\r\n            current.pause();\r\n        };\r\n\r\n        this.continue = function () {\r\n            if (!playing) return;\r\n            current.continue();\r\n        };\r\n\r\n        // Update -----------------------------------------------------\r\n        this.updateClientList = function (data) {\r\n            _cache_client = data;\r\n            current.updateClientList(data);\r\n        };\r\n\r\n        this.updateObList = function (data) {\r\n            _cache_ob = data;\r\n            current.updateObList(data);\r\n        };\r\n\r\n        this.updateGame = function (data) {\r\n            _cache_game = data;\r\n            current.updateGame(data);\r\n        };\r\n\r\n        // Setup ------------------------------------------------------\r\n        var _setupComponent = function (components_in) {\r\n            try{\r\n                component.prepare = components_in.prepare;\r\n                component.main = components_in.main;\r\n                component.end = components_in.end;\r\n                current = component.prepare;\r\n\r\n                component.main.onSetuped = function () {\r\n                    if (that.onSetuped) that.onSetuped();\r\n                };\r\n\r\n            } catch (e) {\r\n                throw new Error('Unexpected Error in setuping components: '+e.message);\r\n            }\r\n        };\r\n                \r\n        var _init = function (components_in) {\r\n            _setupComponent(components_in);\r\n        }(components_in);\r\n    };\r\n    Game.Host = Game.Host || {};\r\n    Game.Host.Renderer = Renderer;\r\n})(Rendxx.Game);"],"sourceRoot":"/source/"}